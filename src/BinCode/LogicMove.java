/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BinCode;

/**
 *
 * @author inbox_bv8awe9
 */
public class LogicMove {
    /*при логическом сдвиге значение последнего бита по направлению сдвига теряется
    (копируясь в бит переноса), а первый приобретает нулевое значение
    например, если тип у нас byte
    253<<2 = -12
    1111 1101  253
    <<2
    1111 0100 -12   то есть биты слева теряются, а справа заходят нули
    легче запоминть - логический сдвиг ВЛЕВО - это умножение на величину сдвига в степени 2
    например если тип int то будет число 1012  (так как в этом случае биты не выходят за предел как в byte
    253*2 в степени 2 = 253*4=1012  то есть 0011 1111 0100
    
    сдвиг вправо >> 
    в этом случае значение последнего бита по направлению сдвига теряется, а первый приобретает нулевое зн
    Если слева число положительное, то заходят нули, если отрицательное - заходят нули
    -127 >> 2 = -32
    1000 0001 -127
    >>2
    1110 0000 -32
    тоже легче запоминать - это будет деление. 
    -127 / 2 в степени 2 = -127/4= 32  так как целочисленное деление
    
    И еще есть безнаковый сдвиг >>>
    в таком случае левый бит, который несет знак превращается в ноль
    */
    public static void main(String[] args) {
        System.out.println(16>>2);
    }
}
